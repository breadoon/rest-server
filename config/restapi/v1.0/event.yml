C-test-login: 
    desc: UUID를 생성.
    pattern: /login
    method : POST
    bodyType: JSON
    needAuth: false
    actionType : built-in
    
    builtIn : 
        name: login 
        params :  
        

C-user-rest-api: 
    desc: 새로운 사용자 rest api를 추가한다.
    pattern: /newApi
    method : POST
    bodyType: JSON
    needAuth: false
    actionType : built-in
    
    builtIn : 
        name: newRestApi 
        params :          
          - (!!string) r.version
          - (!!string) r.key
          - (!!interface) r.api
          

    
       

OS-event-is-participate: 
    desc: 해당 유저가 해당 이벤트에 참여 했는지를 조회한다.
    pattern: /gshare-admin/{user_uuid}/event
    method : get
    bodyType: URLENCODE
    needAuth: true
    actionType : sql
    
    sql: 
      type: read 
      query: >- 
              select user_uuid,event_uuid from tb_event_participant where user_uuid = ?

      params:
        - (!!string) p.user_uuid        


OS-event-participate-event:
    desc: 해당 유저가 참여한 이력이 없으면 해당 이벤트에 참가시킨다.
    pattern: /gshare-admin/{user_uuid}/event
    method : PUT
    bodyType: URLENCODE
    needAuth: true
    actionType : sql

    sql: 
      type: WRITE 
      query: >-
                insert into tb_event_participant values (?,?,now(6))
      params:
        - (!!string) r.event_uuid
        - (!!string) p.user_uuid


OS-event-creation:
    desc: 이벤트를 생성한다.
    pattern: /gshare-admin/event
    method : put
    bodyType: URLENCODE
    needAuth: true
    actionType : sql
    
    sql: 
      type: write
      query: >- 
              insert into tb_event values(?,?,?,'Y',now(6))

      params :              
        - (!!string) s.UID 
        - (!!string) r.name
        - (!!string) r.description



OS-event-select:
    desc: 이벤트 정보를 가져온다.
    pattern: /gshare-admin/event
    method : get
    bodyType: URLENCODE
    needAuth: false
    actionType : sql
    
    sql: 
      type: read
      
      query: >- 
               select uuid event_uuid from tb_event limit 0,4


C-users-specific-user-create-interest-product: 
    desc: 상품 찜하기
    pattern: /companys/{company_id}/users/{user_id}/interests/{product_id}
    method : POST
    actionType : block 
    needAuth: true
    bodyType: JSON
    actionBlock :        
        - seqNo: pre-check
          componentType: sql
          
          sql: 
            type: READ
            query: >- 
                SELECT ifnull((select is_active from tb_product where uuid = ?), 'N') is_active
                
            params :         
                - (!!string) p.product_id
                
        - seqNo: checkProductExists
          componentType: built-in
           
          builtIn : 
               name : NextPipeDecider  
               params : 
                - (!!string)   if ( '${f.[0].is_active}' == 'N' ) {return 'sendError'}  else return 'updateProductInterestCount'
                
       
        - seqNo: updateProductInterestCount
          componentType: sql
          
          sql: 
            type: WRITE
            query: >-
                 UPDATE tb_product
                     SET interest_count = interest_count + 1
                     WHERE uuid = ?
            params :  
                - (!!string) p.product_id           
                
        - seqNo: insertProductInterest
          componentType: sql
          
          sql: 
            type: WRITE
            query: >-

                     INSERT INTO tb_user_interest_products(user_uuid, product_uuid, is_active, creation_time)
                         SELECT ?, ?, 'Y', now(6)
                         FROM tb_user_interest_products
                         WHERE NOT EXISTS (
                            SELECT 1 FROM tb_user_interest_products WHERE user_uuid = ? AND product_uuid = ?
                        ) LIMIT 1

            params :   
                - (!!string) p.user_id       
                - (!!string) p.product_id       
                - (!!string) p.user_id       
                - (!!string) p.product_id   
                - (!!long) r.test_id.aa
                - (!!string) r.test_id.bb
                - (!!string) r.test_id2.aa.bb
                - (!!int) r.test_id2.aa.dd
                - (!!string) r.test_id2.bb.cc
                
        - seqNo: mybatis
          componentType: sql
          
          sql: 
            useMybatis : true
            type: read
            query: >- 
                           select 
                            <choose>
                             <when test='userId != null'>
                                    '${userId}'
                             </when>
                             <otherwise>
                                    ''
                             </otherwise>
                            </choose> , uuid event_uuid from tb_event limit 1
            params :   
                - (!!string) p.user_id -> userId
              
    
        - seqNo: sendSuccess
          componentType: built-in
          
          builtIn : 
            name: SendResponse 
            params :  
                - (!!string) 
                - (!!string)             
                - (!!string) 1 
                
        - seqNo: sendError
          componentType: built-in
          
          builtIn : 
            name: SendResponse 
            params :  
                - (!!string) ERR_ADD_INTEREST_PRODUCT
                - (!!string) 해당 상품이 삭제된 상태이기 때문에 등록할 수가 없습니다.
                - (!!string)         


OS-event-select-q:limit:
    desc: 이벤트 정보를 가져온다.
    pattern: /gshare-admin/event
    method : INLINE
    bodyType: URLENCODE
    needAuth: false
    actionType : sql
    
    sql: 
      type: read
      query: >- 
               select uuid event_uuid from tb_event limit ?,?
      params :   
                - (!!int) r.from
                - (!!long) r.to
                - (!!float) r.to1
                - (!!double) r.to2
                
                
OS-event-select-event-mybatis:
    desc: 이벤트 정보를 가져온다.
    pattern: /gshare-admin/event-my
    method : get
    bodyType: URLENCODE
    needAuth: false
    actionType : sql
    
    sql: 
      useMybatis : true
      type: read
      query: >- 
                   select 
                    <choose>
                     <when test='from1 != null'>
                            ${from}
                     </when>
                     <otherwise>
                            'test'
                     </otherwise>
                    </choose> , uuid event_uuid from tb_event limit #{from},#{to}
      params :   
                - (!!int) r.from -> from
                - (!!int) r.to -> to 
                - (!!int) r.from -> from2
                
                
C-users-specific-user-create-interest-product-aaa: 
    desc: 상품 찜하기
    pattern: /companys/{company_id}/users/{user_id}/interests/{product_id}/my-obj
    method : POST
    needAuth: true
    actionType : sql
    
    sql: 
      useMybatis : true
      type: read
      query: >- 
                   select 
                    <choose>
                     <when test='obj.from1 != null'>
                            '${from}'
                     </when>
                     <otherwise>
                            ''
                     </otherwise>
                    </choose> , uuid event_uuid from tb_event limit #{from},#{to}
      params :   
                - (!!int) r.from -> from
                - (!!int) r.to -> to 
                - (!!interface) r.api -> obj 


C-test-must-commit: 
    desc: 상품 찜하기
    pattern: /test-must-commit
    method : POST
    actionType : block 
    needAuth: false
    bodyType: JSON
    actionBlock :        
        - seqNo: insert-one
          componentType: sql
          
          sql: 
            type: WRITE
            mustCommit: true
            query: >- 
                INSERT INTO aa(a, aa) VALUES('1','2');
                
            params :         
               
                
        - seqNo: error
          componentType: sql
          
          sql: 
            type: WRITE
            query: >- 
                INSERT INTO aa(ab, aa) VALUES('11','22');
                
            params :         
               
        - seqNo: sendSuccess
          componentType: built-in
          
          builtIn : 
            name: SendResponse 
            params :  
                - (!!string) 
                - (!!string)             
                - (!!string) 1           



C-many-insert-mybatis:
    desc: 이벤트 정보를 가져온다.
    pattern: /many-insert
    method : POST
    bodyType: JSON
    needAuth: false
    actionType : sql
    
    sql: 
      useMybatis : true
      type: WRITE
      query: >- 
                   INSERT INTO aa(a, aa, aaa)
                    VALUES
                    <foreach collection="list" item="item" index="index" separator=" , " >
                        ("${item.a}", "${item.aa}", ${index})
                    </foreach> 
      params :   
                - (!!interface) r.item -> list                
                
                
R-get-env-variable:
    desc: 이벤트 정보를 가져온다.
    pattern: /env-vars
    method : GET
    bodyType: URLENCODE
    needAuth: false
    actionType : sql
    
    sql: 
      type: read
      query: >- 
               select ? sub_domain
      params :   
                - (!!string) e.test.GATEWAY_SUB_DOMAIN1
                
                
C-file-upload:
    desc: 이벤트 정보를 가져온다.
    pattern: /fileUpload
    method : POST
    bodyType: FORM
    needAuth: false
    actionType : built-in
    
    builtIn : 
        name: fileUploadTest 
        params :              
            - (!!string) r.type
            - (!!string) r.product_id
            
            
R-cal-test: 
    desc: 더하기
    pattern: /cal/{a}/plus/{b}
    method : GET
    needAuth: false
    actionType : sql
    
    sql: 
      useMybatis : false
      type: read
      selectOne : true
      query: >- 
                   select ? + ? as test
      params :   
                - (!!int) p.a
                - (!!int) p.b
                

R-cal-test222: 
    desc: 더하기
    pattern: /cal/{a}/multi/{b}
    method : GET
    needAuth: true
    actionType : sql
    
    sql: 
      useMybatis : false
      type: read
      query: >- 
                   select ? * ?
      params :   
                - (!!int) p.a
                - (!!int) p.b            